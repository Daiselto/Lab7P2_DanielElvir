/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lab7p2_danielelvir;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author HP
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ArbolListar = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PrimerArbol = new javax.swing.JTree();
        VerArbol = new javax.swing.JButton();
        TabsPrincipales = new javax.swing.JTabbedPane();
        CrearVehiculo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tf_Marca = new javax.swing.JTextField();
        tf_Modelo = new javax.swing.JTextField();
        PrecioVenta = new javax.swing.JTextField();
        AgregarVehiculo = new javax.swing.JButton();
        tf_Año = new javax.swing.JSpinner();
        tf_Color = new javax.swing.JTextField();
        CrearVendedor = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tf_NombreVendedor = new javax.swing.JTextField();
        tf_CantidadCarros = new javax.swing.JSpinner();
        tf_CantidadDinero = new javax.swing.JTextField();
        AgregarVendedor = new javax.swing.JButton();
        CrearCliente = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tf_NombreCliente = new javax.swing.JTextField();
        tf_Edad = new javax.swing.JSpinner();
        tf_Profesion = new javax.swing.JTextField();
        tf_CarrosComprados = new javax.swing.JSpinner();
        tf_SueldoDisponible = new javax.swing.JTextField();
        AgregarCliente = new javax.swing.JButton();
        CrearVentas = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cb_Vendedores = new javax.swing.JComboBox<>();
        cb_Clientes = new javax.swing.JComboBox<>();
        cb_Vehiculos = new javax.swing.JComboBox<>();
        tf_CostoTransaccion = new javax.swing.JTextField();
        AgregarVenta = new javax.swing.JButton();
        VentasDelDia = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_Modificar = new javax.swing.JTextArea();
        VerArboldeTODO = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ArbolDia = new javax.swing.JTree();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Admin");
        PrimerArbol.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane3.setViewportView(PrimerArbol);

        VerArbol.setBackground(new java.awt.Color(102, 0, 102));
        VerArbol.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        VerArbol.setForeground(new java.awt.Color(0, 0, 0));
        VerArbol.setText("VER ARBOL");
        VerArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerArbolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(268, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(VerArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(VerArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ArbolListarLayout = new javax.swing.GroupLayout(ArbolListar.getContentPane());
        ArbolListar.getContentPane().setLayout(ArbolListarLayout);
        ArbolListarLayout.setHorizontalGroup(
            ArbolListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ArbolListarLayout.setVerticalGroup(
            ArbolListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Te amo Nuila <3");
        setAlwaysOnTop(true);

        TabsPrincipales.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TabsPrincipalesStateChanged(evt);
            }
        });

        CrearVehiculo.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel1.setText("Marca");

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel2.setText("Color");

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel3.setText("Modelo");

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel4.setText("Año");

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel5.setText("Precio de Venta");

        AgregarVehiculo.setBackground(new java.awt.Color(102, 0, 102));
        AgregarVehiculo.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        AgregarVehiculo.setForeground(new java.awt.Color(0, 0, 0));
        AgregarVehiculo.setText("AGREGUE VEHICULO");
        AgregarVehiculo.setActionCommand("AGREGUE Vehiculo");
        AgregarVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarVehiculoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CrearVehiculoLayout = new javax.swing.GroupLayout(CrearVehiculo);
        CrearVehiculo.setLayout(CrearVehiculoLayout);
        CrearVehiculoLayout.setHorizontalGroup(
            CrearVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearVehiculoLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(CrearVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(CrearVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_Marca)
                    .addComponent(tf_Modelo)
                    .addComponent(PrecioVenta)
                    .addComponent(tf_Año)
                    .addComponent(tf_Color, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CrearVehiculoLayout.createSequentialGroup()
                .addContainerGap(1130, Short.MAX_VALUE)
                .addComponent(AgregarVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        CrearVehiculoLayout.setVerticalGroup(
            CrearVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearVehiculoLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(CrearVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_Marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CrearVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_Color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(CrearVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_Modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(CrearVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tf_Año, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(CrearVehiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(PrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(AgregarVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        TabsPrincipales.addTab("Vehiculo", CrearVehiculo);

        CrearVendedor.setBackground(new java.awt.Color(0, 102, 102));

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel6.setText("Nombre");

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel7.setText("Cantidad de Carros Vendidos");

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel8.setText("Cantidad de Dinero Generado");

        AgregarVendedor.setBackground(new java.awt.Color(102, 0, 102));
        AgregarVendedor.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        AgregarVendedor.setForeground(new java.awt.Color(0, 0, 0));
        AgregarVendedor.setText("AGREGAR VENDEDOR");
        AgregarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarVendedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CrearVendedorLayout = new javax.swing.GroupLayout(CrearVendedor);
        CrearVendedor.setLayout(CrearVendedorLayout);
        CrearVendedorLayout.setHorizontalGroup(
            CrearVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearVendedorLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(CrearVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(CrearVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_NombreVendedor)
                    .addComponent(tf_CantidadCarros)
                    .addComponent(tf_CantidadDinero, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CrearVendedorLayout.createSequentialGroup()
                .addContainerGap(1062, Short.MAX_VALUE)
                .addComponent(AgregarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        CrearVendedorLayout.setVerticalGroup(
            CrearVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearVendedorLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(CrearVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tf_NombreVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(CrearVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tf_CantidadCarros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(CrearVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tf_CantidadDinero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addComponent(AgregarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        TabsPrincipales.addTab("Vendedor", CrearVendedor);

        CrearCliente.setBackground(new java.awt.Color(0, 102, 102));

        jLabel9.setText("Nombre");

        jLabel10.setText("Edad");

        jLabel11.setText("Profesion");

        jLabel12.setText("Cantidad de Carros Comprados");

        jLabel13.setText("Sueldo Disponible");

        AgregarCliente.setBackground(new java.awt.Color(102, 0, 102));
        AgregarCliente.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        AgregarCliente.setForeground(new java.awt.Color(0, 0, 0));
        AgregarCliente.setText("AGREGAR CLIENTE");
        AgregarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CrearClienteLayout = new javax.swing.GroupLayout(CrearCliente);
        CrearCliente.setLayout(CrearClienteLayout);
        CrearClienteLayout.setHorizontalGroup(
            CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearClienteLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addGroup(CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel12)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGap(18, 18, 18)
                .addGroup(CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_NombreCliente)
                    .addComponent(tf_Profesion)
                    .addComponent(tf_SueldoDisponible, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(tf_Edad, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_CarrosComprados, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CrearClienteLayout.createSequentialGroup()
                .addContainerGap(1078, Short.MAX_VALUE)
                .addComponent(AgregarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        CrearClienteLayout.setVerticalGroup(
            CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearClienteLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(CrearClienteLayout.createSequentialGroup()
                        .addGroup(CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(tf_NombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(tf_Edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(tf_Profesion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(jLabel12))
                    .addComponent(tf_CarrosComprados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tf_SueldoDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(AgregarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        TabsPrincipales.addTab("Cliente", CrearCliente);

        CrearVentas.setBackground(new java.awt.Color(0, 102, 102));

        jLabel14.setText("Vendedor que realizó la operacion");

        jLabel15.setText("Cliente que Compró");

        jLabel16.setText("Costo de la Transaccion");

        jLabel17.setText("Vehiculo que se vendió");

        AgregarVenta.setBackground(new java.awt.Color(102, 0, 102));
        AgregarVenta.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        AgregarVenta.setForeground(new java.awt.Color(0, 0, 0));
        AgregarVenta.setText("AGREGAR VENTA");
        AgregarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarVentaActionPerformed(evt);
            }
        });

        VentasDelDia.setBackground(new java.awt.Color(102, 0, 102));
        VentasDelDia.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        VentasDelDia.setForeground(new java.awt.Color(0, 0, 0));
        VentasDelDia.setText("VER VENTAS DEL DIA");
        VentasDelDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VentasDelDiaActionPerformed(evt);
            }
        });

        Modificar.setBackground(new java.awt.Color(102, 0, 102));
        Modificar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Modificar.setForeground(new java.awt.Color(0, 0, 0));
        Modificar.setText("GUARDAR ARCHIVO MODIFICADO");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        txt_Modificar.setBackground(new java.awt.Color(153, 153, 153));
        txt_Modificar.setColumns(20);
        txt_Modificar.setRows(5);
        jScrollPane1.setViewportView(txt_Modificar);

        VerArboldeTODO.setBackground(new java.awt.Color(102, 0, 102));
        VerArboldeTODO.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        VerArboldeTODO.setForeground(new java.awt.Color(0, 0, 0));
        VerArboldeTODO.setText("VER TODOS LOS ELEMENTOS");
        VerArboldeTODO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerArboldeTODOActionPerformed(evt);
            }
        });

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Ventas del Dia");
        ArbolDia.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane4.setViewportView(ArbolDia);

        jButton1.setBackground(new java.awt.Color(102, 0, 102));
        jButton1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("ABRIR ARCHIVO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CrearVentasLayout = new javax.swing.GroupLayout(CrearVentas);
        CrearVentas.setLayout(CrearVentasLayout);
        CrearVentasLayout.setHorizontalGroup(
            CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearVentasLayout.createSequentialGroup()
                .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CrearVentasLayout.createSequentialGroup()
                        .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CrearVentasLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cb_Vendedores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_Clientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_Vehiculos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tf_CostoTransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(CrearVentasLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(AgregarVenta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(VentasDelDia)
                                .addGap(34, 34, 34)
                                .addComponent(jButton1)))
                        .addGap(27, 27, 27)
                        .addComponent(Modificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(VerArboldeTODO))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CrearVentasLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 999, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CrearVentasLayout.setVerticalGroup(
            CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearVentasLayout.createSequentialGroup()
                .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CrearVentasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14)
                            .addComponent(cb_Vendedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(cb_Clientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(tf_CostoTransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(cb_Vehiculos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CrearVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(AgregarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(VentasDelDia, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(VerArboldeTODO, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CrearVentasLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );

        TabsPrincipales.addTab("Ventas", CrearVentas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabsPrincipales)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabsPrincipales)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AgregarVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarVehiculoActionPerformed
        try {
            String Marca = tf_Marca.getText();
            String Modelo = tf_Modelo.getText();
            String color = tf_Color.getText();
            int Año = (int) tf_Año.getValue();
            double Precio_Venta = Double.parseDouble(PrecioVenta.getText());

            vehiculos.add(new Vehiculo(Marca, color, Modelo, Año, Precio_Venta));

            FileWriter fw = null;
            BufferedWriter bw = null;
            try {
                File archivo = new File("./Vehiculo.txt");
                fw = new FileWriter(archivo, true);
                bw = new BufferedWriter(fw);
                for (Vehiculo t : vehiculos) {
                    bw.write("[\n"
                            + "\t" + t.getMarca() + ", \n"
                            + "\t" + t.getColor() + ", \n"
                            + "\t" + t.getModelo() + ", \n"
                            + "\t" + t.getAño() + ", \n"
                            + "\t" + t.getPrecio_Venta() + ", \n"
                            + "];\n");
                }
                bw.flush();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            bw.close();
            fw.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error y no se agregó");
        }
        JOptionPane.showMessageDialog(this, "Se agregó exitosamente");
        tf_Marca.setText("");
        tf_Modelo.setText("");
        tf_Año.setValue(2000);
        PrecioVenta.setText("");
        tf_Color.setText("");
    }//GEN-LAST:event_AgregarVehiculoActionPerformed

    private void AgregarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarVendedorActionPerformed
        try {
            String Nombre = tf_NombreVendedor.getText();
            int Cantidad_Carros = (int) tf_CantidadCarros.getValue();
            double Cantidad_Dinero = Double.parseDouble(tf_CantidadDinero.getText());

            vendededores.add(new Vendedor(Nombre, Cantidad_Carros, Cantidad_Dinero));

            FileWriter fw = null;
            BufferedWriter bw = null;
            try {
                File archivo = new File("./Vendedor.txt");
                fw = new FileWriter(archivo, true);
                bw = new BufferedWriter(fw);
                for (Vendedor t : vendededores) {
                    bw.write("[\n"
                            + "\t" + t.getNombre() + ", \n"
                            + "\t" + t.getCarros_Vendidos() + ", \n"
                            + "\t" + t.getDinero_Generado() + ", \n"
                            + "];\n");
                }
                bw.flush();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            bw.close();
            fw.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error, no se agregó nada");
        }
        JOptionPane.showMessageDialog(this, "Vendedor agregado exitosamente");
        tf_NombreVendedor.setText("");
        tf_CantidadCarros.setValue(0);
        tf_CantidadDinero.setText("");
    }//GEN-LAST:event_AgregarVendedorActionPerformed

    private void AgregarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarClienteActionPerformed
        try {
            String Nombre = tf_NombreCliente.getText();
            int Edad = (int) tf_Edad.getValue();
            String Profesion = tf_Profesion.getText();
            int Carros_Comprados = (int) tf_CarrosComprados.getValue();
            double Sueldo = Double.parseDouble(tf_SueldoDisponible.getText());

            clientes.add(new Cliente(Nombre, Edad, Profesion, Carros_Comprados, Sueldo));

            FileWriter fw = null;
            BufferedWriter bw = null;
            try {
                File archivo = new File("./Cliente.txt");
                fw = new FileWriter(archivo, true);
                bw = new BufferedWriter(fw);
                for (Cliente t : clientes) {
                    bw.write("[\n"
                            + "\t" + t.getNombre() + ", \n"
                            + "\t" + t.getEdad() + ", \n"
                            + "\t" + t.getProfesion() + ", \n"
                            + "\t" + t.getCarros_Comprados() + ", \n"
                            + "\t" + t.getSueldo_Disponible() + ", \n"
                            + "];\n");
                }
                bw.flush();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            bw.close();
            fw.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error y no se agregó nada");
        }
        JOptionPane.showMessageDialog(this, "Cliente agregado exitosamente");
        tf_NombreCliente.setText("");
        tf_Edad.setValue(0);
        tf_Profesion.setText("");
        tf_CarrosComprados.setValue(0);
        tf_SueldoDisponible.setText("");
    }//GEN-LAST:event_AgregarClienteActionPerformed

    private void AgregarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarVentaActionPerformed
        try {
            Vendedor ven = (Vendedor) cb_Vendedores.getSelectedItem();
            Cliente cli = (Cliente) cb_Clientes.getSelectedItem();
            double transaccion = Double.parseDouble(tf_CostoTransaccion.getText());
            Vehiculo veh = (Vehiculo) cb_Vehiculos.getSelectedItem();

            ventas.add(new Venta(ven, cli, transaccion, veh));

            FileWriter fw = null;
            BufferedWriter bw = null;
            try {
                File archivo = new File("./Venta.txt");
                fw = new FileWriter(archivo, true);
                bw = new BufferedWriter(fw);
                for (Venta t : ventas) {
                    bw.write("[\n"
                            + "\t" + t.getVendedor() + ", \n"
                            + "\t" + t.getCliente() + ", \n"
                            + "\t" + t.getCosto_Transaccion() + ", \n"
                            + "\t" + t.getCarro() + ", \n"
                            + "];\n");
                }
                bw.flush();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            bw.close();
            fw.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error y no se agregó nada");
        }
        JOptionPane.showMessageDialog(this, "Venta agregada exitosamente");
        cb_Vendedores.setSelectedIndex(0);
        cb_Vehiculos.setSelectedIndex(0);
        cb_Clientes.setSelectedIndex(0);
        tf_CostoTransaccion.setText("");
    }//GEN-LAST:event_AgregarVentaActionPerformed

    private void VentasDelDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VentasDelDiaActionPerformed
        JFileChooser jfc = new JFileChooser("./");
        FileNameExtensionFilter filtro
                = new FileNameExtensionFilter(
                        "Archivos de Texto", "txt");
        jfc.setFileFilter(filtro);
        int seleccion = jfc.showSaveDialog(this);
        FileWriter fw = null;
        BufferedWriter bw = null;
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            try {

                File fichero = null;
                if (jfc.getFileFilter().getDescription().equals(
                        "Archivos de Texto")) {
                    fichero
                            = new File(jfc.getSelectedFile().getPath() + ".txt");
                } else {
                    fichero = jfc.getSelectedFile();
                }
                fw = new FileWriter(fichero);
                bw = new BufferedWriter(fw);
                int cont = 1;
                for (Venta t : ventas) {
                    bw.write("[\n"
                            + "\t" + cont + ", \n"
                            + "\t" + t.getVendedor() + ", \n"
                            + "\t" + t.getCliente() + ", \n"
                            + "\t" + t.getCosto_Transaccion() + ", \n"
                            + "\t" + t.getCarro() + ", \n"
                            + "];\n");
                    cont++;
                }
                bw.flush();
                DefaultTreeModel m = (DefaultTreeModel) ArbolDia.getModel();
                DefaultMutableTreeNode raiz
                        = (DefaultMutableTreeNode) m.getRoot();
                int cont1=1;
                
                for (Venta t : ventas) {
                    DefaultMutableTreeNode conta = new DefaultMutableTreeNode(cont1);
                    DefaultMutableTreeNode nomVend = new DefaultMutableTreeNode(t.getVendedor());
                    DefaultMutableTreeNode nomComp = new DefaultMutableTreeNode(t.getCliente());
                    conta.add(nomComp);
                    conta.add(nomVend);
                    raiz.add(conta);
                    cont1++;
                }
                m.reload();
                ventas.removeAll(ventas);

                JOptionPane.showMessageDialog(this,
                        "Ventas hechas");

            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                bw.close();
                fw.close();
            } catch (IOException ex) {
            }
        }//fin IF


    }//GEN-LAST:event_VentasDelDiaActionPerformed

    private void TabsPrincipalesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TabsPrincipalesStateChanged
        if (TabsPrincipales.getSelectedIndex() == 3) {
            cb_Clientes.removeAllItems();
            cb_Vehiculos.removeAllItems();
            cb_Vendedores.removeAllItems();
            agregarComboVehiculo();
            agregarComboVendedor();
            agregarComboCliente();

        }
    }//GEN-LAST:event_TabsPrincipalesStateChanged

    private void VerArboldeTODOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerArboldeTODOActionPerformed
        ArbolListar.pack();
        ArbolListar.setAlwaysOnTop(true);
        ArbolListar.setModal(true);
        ArbolListar.setLocationRelativeTo(this);
        ArbolListar.setVisible(true);
    }//GEN-LAST:event_VerArboldeTODOActionPerformed

    private void VerArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerArbolActionPerformed
        DefaultTreeModel m = (DefaultTreeModel) PrimerArbol.getModel();
        DefaultMutableTreeNode raiz
                = (DefaultMutableTreeNode) m.getRoot();
        File file = new File("./Cliente.txt");
        DefaultMutableTreeNode cliente = new DefaultMutableTreeNode(file);
        File file1 = new File("./Vendedor.txt");
        DefaultMutableTreeNode vendedor = new DefaultMutableTreeNode(file1);
        File file2 = new File("./Vehiculo.txt");
        DefaultMutableTreeNode vehiculo = new DefaultMutableTreeNode(file2);
        File file3 = new File("./Venta.txt");
        DefaultMutableTreeNode venta = new DefaultMutableTreeNode(file3);
        
        vehiculoscb = new ArrayList();
        try {
            File file4 = new File("./Vehiculo.txt");
            FileReader fr = new FileReader(file4);
            BufferedReader br = new BufferedReader(fr);

            String linea = "";
            String entrada = "";
            ArrayList<String> datos = new ArrayList();
            while ((linea = br.readLine()) != null) {

                if (!linea.contains("];")) {
                    entrada += linea;
                } else {
                    datos.add(entrada);
                    entrada = "";
                }
            }
            for (String dato : datos) {
                String data[] = dato.split(",");
                data[0] = data[0].substring(2, data[0].length());
                data[1] = data[1].substring(2, data[1].length());
                data[2] = data[2].substring(2, data[2].length());
                data[3] = data[3].substring(2, data[3].length());
                int año = Integer.parseInt(data[3]);
                data[4] = data[4].substring(2, data[4].length());
                double precio = Double.parseDouble(data[4]);
                Vehiculo v = new Vehiculo(data[0], data[1], data[2], año, precio);
                vehiculo1=new DefaultMutableTreeNode(v);

            }

            
            fr.close();
            br.close();
        } catch (Exception e) {
        }
        
        clientescb = new ArrayList();
        try {
            File file5 = new File("./Cliente.txt");
            FileReader fr = new FileReader(file5);
            BufferedReader br = new BufferedReader(fr);

            String linea = "";
            String entrada = "";
            ArrayList<String> datos = new ArrayList();
            while ((linea = br.readLine()) != null) {

                if (!linea.contains("];")) {
                    entrada += linea;
                } else {
                    datos.add(entrada);
                    entrada = "";
                }
            }
            for (String dato : datos) {
                String data[] = dato.split(",");
                data[0] = data[0].substring(2, data[0].length());
                data[1] = data[1].substring(2, data[1].length());
                int edad = Integer.parseInt(data[1]);
                data[2] = data[2].substring(2, data[2].length());
                data[3] = data[3].substring(2, data[3].length());
                int CantidadCarros = Integer.parseInt(data[3]);
                data[4] = data[4].substring(2, data[4].length());
                double Sueldo = Double.parseDouble(data[4]);
                Cliente c = new Cliente(data[0], edad, data[2], CantidadCarros, Sueldo);
                cliente1=new DefaultMutableTreeNode(c);
            }

            
            fr.close();
            br.close();
        } catch (Exception e) {
        }
        
        vendedorcb = new ArrayList();
        try {
            File file6 = new File("./Vendedor.txt");
            FileReader fr = new FileReader(file6);
            BufferedReader br = new BufferedReader(fr);

            String linea = "";
            String entrada = "";
            ArrayList<String> datos = new ArrayList();
            while ((linea = br.readLine()) != null) {

                if (!linea.contains("];")) {
                    entrada += linea;
                } else {
                    datos.add(entrada);
                    entrada = "";
                }
            }
            for (String dato : datos) {
                String data[] = dato.split(",");
                data[0] = data[0].substring(2, data[0].length());
                data[1] = data[1].substring(2, data[1].length());
                int carros = Integer.parseInt(data[1]);
                data[2] = data[2].substring(2, data[2].length());
                double precio = Double.parseDouble(data[2]);

                Vendedor v = new Vendedor(data[0], carros, precio);
                vendedor1 = new DefaultMutableTreeNode(v);

            }

            
            fr.close();
            br.close();
        } catch (Exception e) {
        }
        
        raiz.add(venta);        
        vehiculo.add(vehiculo1);
        raiz.add(vehiculo);
        vendedor.add(vendedor1);
        raiz.add(vendedor);
        cliente.add(cliente1);
        raiz.add(cliente);
        
        m.reload();
        

    }//GEN-LAST:event_VerArbolActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        JFileChooser archSelecc = new JFileChooser("./");
            FileNameExtensionFilter filtro
                = new FileNameExtensionFilter(
                        "Archivos de Texto", "txt");
            archSelecc.setFileFilter(filtro);
            if (archSelecc.showDialog(this, "Abrir")==JFileChooser.APPROVE_OPTION) {
                File file = archSelecc.getSelectedFile();
                if (file.getName().endsWith(".txt")) {
                    String txtmod = txt_Modificar.getText();
                    String mensaje = GuardarArchivo(file, txtmod);
                    if (mensaje!=null) {
                        JOptionPane.showMessageDialog(this, mensaje);
                    }else{
                        JOptionPane.showMessageDialog(this, "Archivo no compatible");
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Guardar un documento de texto");
                }
            }
    }//GEN-LAST:event_ModificarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
            JFileChooser archSelecc = new JFileChooser("./");
            FileNameExtensionFilter filtro
                = new FileNameExtensionFilter(
                        "Archivos de Texto", "txt");
            archSelecc.setFileFilter(filtro);
            if (archSelecc.showDialog(this, "Abrir")==JFileChooser.APPROVE_OPTION) {
                File file = archSelecc.getSelectedFile();
                if(file.canRead()){
                    if (file.getName().endsWith(".txt")) {
                        String texto = AbrirArchivo(file);
                        txt_Modificar.setText(texto);
                    }else{
                        JOptionPane.showMessageDialog(this, "Eso no es un txt papi");
                    }
                }
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private String AbrirArchivo(File file){
        String texto="";
        try {
            FileInputStream input = new FileInputStream(file);
            int ascii;
            while ((ascii=input.read())!=-1) {
                char c = (char) ascii;
                texto+=c;
            }
        } catch (Exception e) {
        }
        
        return texto;
    }
    
    private String GuardarArchivo(File file, String texto){
        String mensaje="";
        try {
            FileOutputStream output = new FileOutputStream(file);
            byte[] btes = texto.getBytes();
            output.write(btes);
            mensaje = "Archivo guardado";
        } catch (Exception e) {
            e.printStackTrace();
        }
        return mensaje; 
    }
    
    private void agregarComboVehiculo() {
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_Vehiculos.getModel();
        vehiculoscb = new ArrayList();
        try {
            File file = new File("./Vehiculo.txt");
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);

            String linea = "";
            String entrada = "";
            ArrayList<String> datos = new ArrayList();
            while ((linea = br.readLine()) != null) {

                if (!linea.contains("];")) {
                    entrada += linea;
                } else {
                    datos.add(entrada);
                    entrada = "";
                }
            }
            for (String dato : datos) {
                String data[] = dato.split(",");
                data[0] = data[0].substring(2, data[0].length());
                data[1] = data[1].substring(2, data[1].length());
                data[2] = data[2].substring(2, data[2].length());
                data[3] = data[3].substring(2, data[3].length());
                int año = Integer.parseInt(data[3]);
                data[4] = data[4].substring(2, data[4].length());
                double precio = Double.parseDouble(data[4]);
                Vehiculo v = new Vehiculo(data[0], data[1], data[2], año, precio);
                modelo.addElement(v);

            }

            modelo.addAll(vehiculoscb);
            cb_Vehiculos.setModel(modelo);
            fr.close();
            br.close();
        } catch (Exception e) {
        }

    }

    private void agregarComboVendedor() {
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_Vendedores.getModel();
        vendedorcb = new ArrayList();
        try {
            File file = new File("./Vendedor.txt");
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);

            String linea = "";
            String entrada = "";
            ArrayList<String> datos = new ArrayList();
            while ((linea = br.readLine()) != null) {

                if (!linea.contains("];")) {
                    entrada += linea;
                } else {
                    datos.add(entrada);
                    entrada = "";
                }
            }
            for (String dato : datos) {
                String data[] = dato.split(",");
                data[0] = data[0].substring(2, data[0].length());
                data[1] = data[1].substring(2, data[1].length());
                int carros = Integer.parseInt(data[1]);
                data[2] = data[2].substring(2, data[2].length());
                double precio = Double.parseDouble(data[2]);

                Vendedor v = new Vendedor(data[0], carros, precio);
                modelo.addElement(v);

            }

            modelo.addAll(vendedorcb);
            cb_Vendedores.setModel(modelo);
            fr.close();
            br.close();
        } catch (Exception e) {
        }

    }

    private void agregarComboCliente() {
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_Clientes.getModel();
        clientescb = new ArrayList();
        try {
            File file = new File("./Cliente.txt");
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);

            String linea = "";
            String entrada = "";
            ArrayList<String> datos = new ArrayList();
            while ((linea = br.readLine()) != null) {

                if (!linea.contains("];")) {
                    entrada += linea;
                } else {
                    datos.add(entrada);
                    entrada = "";
                }
            }
            for (String dato : datos) {
                String data[] = dato.split(",");
                data[0] = data[0].substring(2, data[0].length());
                data[1] = data[1].substring(2, data[1].length());
                int edad = Integer.parseInt(data[1]);
                data[2] = data[2].substring(2, data[2].length());
                data[3] = data[3].substring(2, data[3].length());
                int CantidadCarros = Integer.parseInt(data[3]);
                data[4] = data[4].substring(2, data[4].length());
                double Sueldo = Double.parseDouble(data[4]);
                Cliente c = new Cliente(data[0], edad, data[2], CantidadCarros, Sueldo);
                modelo.addElement(c);
            }

            modelo.addAll(clientescb);
            cb_Clientes.setModel(modelo);
            fr.close();
            br.close();
        } catch (Exception e) {
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    ArrayList<Vehiculo> vehiculos = new ArrayList();
    ArrayList<Vendedor> vendededores = new ArrayList();
    ArrayList<Cliente> clientes = new ArrayList();
    ArrayList<Venta> ventas = new ArrayList();
    ArrayList<String> vehiculoscb = new ArrayList();
    ArrayList<String> vendedorcb = new ArrayList();
    ArrayList<String> clientescb = new ArrayList();
    DefaultMutableTreeNode vehiculo1;
    DefaultMutableTreeNode cliente1;
    DefaultMutableTreeNode vendedor1;
    DefaultMutableTreeNode venta1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarCliente;
    private javax.swing.JButton AgregarVehiculo;
    private javax.swing.JButton AgregarVendedor;
    private javax.swing.JButton AgregarVenta;
    private javax.swing.JTree ArbolDia;
    private javax.swing.JDialog ArbolListar;
    private javax.swing.JPanel CrearCliente;
    private javax.swing.JPanel CrearVehiculo;
    private javax.swing.JPanel CrearVendedor;
    private javax.swing.JPanel CrearVentas;
    private javax.swing.JButton Modificar;
    private javax.swing.JTextField PrecioVenta;
    private javax.swing.JTree PrimerArbol;
    private javax.swing.JTabbedPane TabsPrincipales;
    private javax.swing.JButton VentasDelDia;
    private javax.swing.JButton VerArbol;
    private javax.swing.JButton VerArboldeTODO;
    private javax.swing.JComboBox<String> cb_Clientes;
    private javax.swing.JComboBox<String> cb_Vehiculos;
    private javax.swing.JComboBox<String> cb_Vendedores;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner tf_Año;
    private javax.swing.JSpinner tf_CantidadCarros;
    private javax.swing.JTextField tf_CantidadDinero;
    private javax.swing.JSpinner tf_CarrosComprados;
    private javax.swing.JTextField tf_Color;
    private javax.swing.JTextField tf_CostoTransaccion;
    private javax.swing.JSpinner tf_Edad;
    private javax.swing.JTextField tf_Marca;
    private javax.swing.JTextField tf_Modelo;
    private javax.swing.JTextField tf_NombreCliente;
    private javax.swing.JTextField tf_NombreVendedor;
    private javax.swing.JTextField tf_Profesion;
    private javax.swing.JTextField tf_SueldoDisponible;
    private javax.swing.JTextArea txt_Modificar;
    // End of variables declaration//GEN-END:variables
}
